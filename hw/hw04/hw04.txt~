H343 / Spring 2017 HW 4 Andrew Mathies awmathie
A.

2. a.
8, 1, 4, 1, 5, 9, 2, 6, 5

1, 8, 4, 1, 5, 9, 2, 6, 5
1, 4, 8, 1, 5, 9, 2, 6, 5
1, 1, 4, 8, 5, 9, 2, 6, 5
1, 1, 4, 5, 8, 9, 2, 6, 5
1, 1, 4, 5, 8, 9, 2, 6, 5
1, 1, 2, 4, 5, 8, 9, 6, 5
1, 1, 2, 4, 5, 6, 8, 9, 5
1, 1, 2, 4, 5, 5, 6, 8, 9

b.
8, 1, 4, 1, 5, 9, 2, 6, 5

1, 8, 4, 1, 5, 9, 2, 6, 5
1, 8, 1, 4, 5, 9, 2, 6, 5
1, 1, 4, 8, 5, 9, 2, 6, 5
1, 1, 4, 8, 5, 9, 2, 6, 5
1, 1, 4, 8, 5, 9, 2, 6, 5
1, 1, 4, 8, 2, 5, 6, 9, 5
1, 1, 4, 8, 2, 5, 5, 6, 9
1, 1, 2, 4, 5, 5, 6, 8, 9

3. The sorting algorithm doesn't change the relative ordering of elements
with identical values.

4. a. Insertion sort is stable, because if it goes from the beginning of 
the list to the end of the list and sees a value for the second time, it
will swap the new duplicate element with the element immediately after the 
old duplicate element.

b. Bubble sort is stable, for similar reasons to insertion sort. The
algorithm starts at the beginning and only ever swaps back towards the
beginning so duplicate value elements would never be swapped behind the
first occurence of the duplicate value.

c. Mergesort is stable, because when comparing the first elements in two
subsets of the list, if the two elements are duplicates it will place the
first occurence of the duplicate element into the final list first.

d. Heapsort is not stable, because when building the heap duplicates are not
neccesarily placed below earlier occurences of the same value. Also when you
start removing the max value element from the heap there is no guarantee that
duplicate value elements in the heap will stay in there current orientation.

B. 1. 
